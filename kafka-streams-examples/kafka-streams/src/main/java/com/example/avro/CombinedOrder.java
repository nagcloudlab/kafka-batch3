/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.example.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class CombinedOrder extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 480525804252610965L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CombinedOrder\",\"namespace\":\"com.example.avro\",\"fields\":[{\"name\":\"electronic_order_id\",\"type\":\"string\"},{\"name\":\"appliance_order_id\",\"type\":\"string\"},{\"name\":\"appliance_id\",\"type\":\"string\"},{\"name\":\"user_name\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"time\",\"type\":\"long\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CombinedOrder> ENCODER =
      new BinaryMessageEncoder<CombinedOrder>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CombinedOrder> DECODER =
      new BinaryMessageDecoder<CombinedOrder>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CombinedOrder> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CombinedOrder> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CombinedOrder> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CombinedOrder>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CombinedOrder to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CombinedOrder from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CombinedOrder instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CombinedOrder fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence electronic_order_id;
   private java.lang.CharSequence appliance_order_id;
   private java.lang.CharSequence appliance_id;
   private java.lang.CharSequence user_name;
   private long time;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CombinedOrder() {}

  /**
   * All-args constructor.
   * @param electronic_order_id The new value for electronic_order_id
   * @param appliance_order_id The new value for appliance_order_id
   * @param appliance_id The new value for appliance_id
   * @param user_name The new value for user_name
   * @param time The new value for time
   */
  public CombinedOrder(java.lang.CharSequence electronic_order_id, java.lang.CharSequence appliance_order_id, java.lang.CharSequence appliance_id, java.lang.CharSequence user_name, java.lang.Long time) {
    this.electronic_order_id = electronic_order_id;
    this.appliance_order_id = appliance_order_id;
    this.appliance_id = appliance_id;
    this.user_name = user_name;
    this.time = time;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return electronic_order_id;
    case 1: return appliance_order_id;
    case 2: return appliance_id;
    case 3: return user_name;
    case 4: return time;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: electronic_order_id = (java.lang.CharSequence)value$; break;
    case 1: appliance_order_id = (java.lang.CharSequence)value$; break;
    case 2: appliance_id = (java.lang.CharSequence)value$; break;
    case 3: user_name = (java.lang.CharSequence)value$; break;
    case 4: time = (java.lang.Long)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'electronic_order_id' field.
   * @return The value of the 'electronic_order_id' field.
   */
  public java.lang.CharSequence getElectronicOrderId() {
    return electronic_order_id;
  }


  /**
   * Sets the value of the 'electronic_order_id' field.
   * @param value the value to set.
   */
  public void setElectronicOrderId(java.lang.CharSequence value) {
    this.electronic_order_id = value;
  }

  /**
   * Gets the value of the 'appliance_order_id' field.
   * @return The value of the 'appliance_order_id' field.
   */
  public java.lang.CharSequence getApplianceOrderId() {
    return appliance_order_id;
  }


  /**
   * Sets the value of the 'appliance_order_id' field.
   * @param value the value to set.
   */
  public void setApplianceOrderId(java.lang.CharSequence value) {
    this.appliance_order_id = value;
  }

  /**
   * Gets the value of the 'appliance_id' field.
   * @return The value of the 'appliance_id' field.
   */
  public java.lang.CharSequence getApplianceId() {
    return appliance_id;
  }


  /**
   * Sets the value of the 'appliance_id' field.
   * @param value the value to set.
   */
  public void setApplianceId(java.lang.CharSequence value) {
    this.appliance_id = value;
  }

  /**
   * Gets the value of the 'user_name' field.
   * @return The value of the 'user_name' field.
   */
  public java.lang.CharSequence getUserName() {
    return user_name;
  }


  /**
   * Sets the value of the 'user_name' field.
   * @param value the value to set.
   */
  public void setUserName(java.lang.CharSequence value) {
    this.user_name = value;
  }

  /**
   * Gets the value of the 'time' field.
   * @return The value of the 'time' field.
   */
  public long getTime() {
    return time;
  }


  /**
   * Sets the value of the 'time' field.
   * @param value the value to set.
   */
  public void setTime(long value) {
    this.time = value;
  }

  /**
   * Creates a new CombinedOrder RecordBuilder.
   * @return A new CombinedOrder RecordBuilder
   */
  public static com.example.avro.CombinedOrder.Builder newBuilder() {
    return new com.example.avro.CombinedOrder.Builder();
  }

  /**
   * Creates a new CombinedOrder RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CombinedOrder RecordBuilder
   */
  public static com.example.avro.CombinedOrder.Builder newBuilder(com.example.avro.CombinedOrder.Builder other) {
    if (other == null) {
      return new com.example.avro.CombinedOrder.Builder();
    } else {
      return new com.example.avro.CombinedOrder.Builder(other);
    }
  }

  /**
   * Creates a new CombinedOrder RecordBuilder by copying an existing CombinedOrder instance.
   * @param other The existing instance to copy.
   * @return A new CombinedOrder RecordBuilder
   */
  public static com.example.avro.CombinedOrder.Builder newBuilder(com.example.avro.CombinedOrder other) {
    if (other == null) {
      return new com.example.avro.CombinedOrder.Builder();
    } else {
      return new com.example.avro.CombinedOrder.Builder(other);
    }
  }

  /**
   * RecordBuilder for CombinedOrder instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CombinedOrder>
    implements org.apache.avro.data.RecordBuilder<CombinedOrder> {

    private java.lang.CharSequence electronic_order_id;
    private java.lang.CharSequence appliance_order_id;
    private java.lang.CharSequence appliance_id;
    private java.lang.CharSequence user_name;
    private long time;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.example.avro.CombinedOrder.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.electronic_order_id)) {
        this.electronic_order_id = data().deepCopy(fields()[0].schema(), other.electronic_order_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.appliance_order_id)) {
        this.appliance_order_id = data().deepCopy(fields()[1].schema(), other.appliance_order_id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.appliance_id)) {
        this.appliance_id = data().deepCopy(fields()[2].schema(), other.appliance_id);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.user_name)) {
        this.user_name = data().deepCopy(fields()[3].schema(), other.user_name);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.time)) {
        this.time = data().deepCopy(fields()[4].schema(), other.time);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing CombinedOrder instance
     * @param other The existing instance to copy.
     */
    private Builder(com.example.avro.CombinedOrder other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.electronic_order_id)) {
        this.electronic_order_id = data().deepCopy(fields()[0].schema(), other.electronic_order_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.appliance_order_id)) {
        this.appliance_order_id = data().deepCopy(fields()[1].schema(), other.appliance_order_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.appliance_id)) {
        this.appliance_id = data().deepCopy(fields()[2].schema(), other.appliance_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.user_name)) {
        this.user_name = data().deepCopy(fields()[3].schema(), other.user_name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.time)) {
        this.time = data().deepCopy(fields()[4].schema(), other.time);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'electronic_order_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getElectronicOrderId() {
      return electronic_order_id;
    }


    /**
      * Sets the value of the 'electronic_order_id' field.
      * @param value The value of 'electronic_order_id'.
      * @return This builder.
      */
    public com.example.avro.CombinedOrder.Builder setElectronicOrderId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.electronic_order_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'electronic_order_id' field has been set.
      * @return True if the 'electronic_order_id' field has been set, false otherwise.
      */
    public boolean hasElectronicOrderId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'electronic_order_id' field.
      * @return This builder.
      */
    public com.example.avro.CombinedOrder.Builder clearElectronicOrderId() {
      electronic_order_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'appliance_order_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getApplianceOrderId() {
      return appliance_order_id;
    }


    /**
      * Sets the value of the 'appliance_order_id' field.
      * @param value The value of 'appliance_order_id'.
      * @return This builder.
      */
    public com.example.avro.CombinedOrder.Builder setApplianceOrderId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.appliance_order_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'appliance_order_id' field has been set.
      * @return True if the 'appliance_order_id' field has been set, false otherwise.
      */
    public boolean hasApplianceOrderId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'appliance_order_id' field.
      * @return This builder.
      */
    public com.example.avro.CombinedOrder.Builder clearApplianceOrderId() {
      appliance_order_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'appliance_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getApplianceId() {
      return appliance_id;
    }


    /**
      * Sets the value of the 'appliance_id' field.
      * @param value The value of 'appliance_id'.
      * @return This builder.
      */
    public com.example.avro.CombinedOrder.Builder setApplianceId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.appliance_id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'appliance_id' field has been set.
      * @return True if the 'appliance_id' field has been set, false otherwise.
      */
    public boolean hasApplianceId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'appliance_id' field.
      * @return This builder.
      */
    public com.example.avro.CombinedOrder.Builder clearApplianceId() {
      appliance_id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'user_name' field.
      * @return The value.
      */
    public java.lang.CharSequence getUserName() {
      return user_name;
    }


    /**
      * Sets the value of the 'user_name' field.
      * @param value The value of 'user_name'.
      * @return This builder.
      */
    public com.example.avro.CombinedOrder.Builder setUserName(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.user_name = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'user_name' field has been set.
      * @return True if the 'user_name' field has been set, false otherwise.
      */
    public boolean hasUserName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'user_name' field.
      * @return This builder.
      */
    public com.example.avro.CombinedOrder.Builder clearUserName() {
      user_name = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'time' field.
      * @return The value.
      */
    public long getTime() {
      return time;
    }


    /**
      * Sets the value of the 'time' field.
      * @param value The value of 'time'.
      * @return This builder.
      */
    public com.example.avro.CombinedOrder.Builder setTime(long value) {
      validate(fields()[4], value);
      this.time = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'time' field has been set.
      * @return True if the 'time' field has been set, false otherwise.
      */
    public boolean hasTime() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'time' field.
      * @return This builder.
      */
    public com.example.avro.CombinedOrder.Builder clearTime() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CombinedOrder build() {
      try {
        CombinedOrder record = new CombinedOrder();
        record.electronic_order_id = fieldSetFlags()[0] ? this.electronic_order_id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.appliance_order_id = fieldSetFlags()[1] ? this.appliance_order_id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.appliance_id = fieldSetFlags()[2] ? this.appliance_id : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.user_name = fieldSetFlags()[3] ? this.user_name : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.time = fieldSetFlags()[4] ? this.time : (java.lang.Long) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CombinedOrder>
    WRITER$ = (org.apache.avro.io.DatumWriter<CombinedOrder>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CombinedOrder>
    READER$ = (org.apache.avro.io.DatumReader<CombinedOrder>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.electronic_order_id);

    out.writeString(this.appliance_order_id);

    out.writeString(this.appliance_id);

    out.writeString(this.user_name);

    out.writeLong(this.time);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.electronic_order_id = in.readString(this.electronic_order_id instanceof Utf8 ? (Utf8)this.electronic_order_id : null);

      this.appliance_order_id = in.readString(this.appliance_order_id instanceof Utf8 ? (Utf8)this.appliance_order_id : null);

      this.appliance_id = in.readString(this.appliance_id instanceof Utf8 ? (Utf8)this.appliance_id : null);

      this.user_name = in.readString(this.user_name instanceof Utf8 ? (Utf8)this.user_name : null);

      this.time = in.readLong();

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.electronic_order_id = in.readString(this.electronic_order_id instanceof Utf8 ? (Utf8)this.electronic_order_id : null);
          break;

        case 1:
          this.appliance_order_id = in.readString(this.appliance_order_id instanceof Utf8 ? (Utf8)this.appliance_order_id : null);
          break;

        case 2:
          this.appliance_id = in.readString(this.appliance_id instanceof Utf8 ? (Utf8)this.appliance_id : null);
          break;

        case 3:
          this.user_name = in.readString(this.user_name instanceof Utf8 ? (Utf8)this.user_name : null);
          break;

        case 4:
          this.time = in.readLong();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










